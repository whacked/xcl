{:source-paths
 ["src"]

 :dependencies
 [[camel-snake-kebab "0.4.1"]
  [cider/cider-nrepl "0.25.2"]
  [cljs-ajax "0.8.0"]
  [com.cemerick/url "0.1.1"]
  [com.taoensso/timbre "4.10.0"]
  [funcool/promesa "5.1.0"]
  [kitchen-async "0.1.0-SNAPSHOT"]
  [macchiato/core "0.2.16"]
  [macchiato/hiccups "0.4.1"]
  [metosin/malli "0.3.0"]
  [metosin/reitit "0.5.1"]
  [metosin/spec-tools "0.10.3"]
  [mhuebert/shadow-env "0.1.6"]
  [org.clojure/data.json "1.0.0"]
  [prismatic/schema "1.1.12"]
  [reagent "1.0.0"]
  [rum "0.12.3"]
  [stylefy "2.2.1"]]

 ;; connect to the cljs repl from cider:
 ;; (shadow.cljs.devtools.api/nrepl-select :browser-sample)
 :nrepl {:port 8202}
 
 :builds
 {:browser-sample {:target :browser
                   :output-dir "public/js"
                   :asset-path "/js"
                   
                   :modules
                   {:main ;; <- becomes public/js/main.js
                    {:entries [xcl.viz]}}

                   ;; start a development http server on http://localhost:8020
                   :devtools
                   {:http-root "public"
                    :http-port 8020}

                   :build-hooks [(shadow-env.core/hook)]
                   }

  :node-test {:target :node-library
              :output-to "build/test.js"
              :exports {:main xcl.test/-main}}
  
  :lib-sample {:target :node-library
               :output-to "build/transclusion.js"
               :exports
               {:getExactTextFromPartialStringMatch
                xcl.node-interop/get-exact-text-from-partial-string-match
                :render
                xcl.node-interop/render
                :parseLink
                xcl.node-interop/parse-link
                :getText
                xcl.node-interop/get-text
                }}

  :node-content-server {:target :node-script
                        :output-to "build/node-content-server.js"
                        :build-hooks [(shadow-env.core/hook)]
                        :main xcl.node-content-server/-main}

  :macchiato {:target :node-script
              :output-to "build/macchiato-server.js"
              :build-hooks [(shadow-env.core/hook)]
              :main xcl.macchiato-server/-main}

  :crud-frontend {:target :browser
                  :output-to "public/js"
                  :asset-path "."
                  :modules
                  {:crud-main
                   {:entries [xcl.model-crud-frontend]}}
                  :build-hooks [(shadow-env.core/hook)]}

  :indexer-frontend {:target :browser
                     :output-to "public/js"
                     :asset-path "."
                     :modules
                     {:crud-main
                      {:entries [xcl.indexer.frontend]}}
                     :build-hooks [(shadow-env.core/hook)]}
  }}
